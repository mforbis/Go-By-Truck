Example API call for hopeful clarity. I have provided the barebones of an example callback and the call as it might be in a scene. At the end I go over how to add one. I hope this helps the confusion as it is kind of all over the place. Sorry for that. Over time I have discovered ways to streamline this more, but more work could be done. However, I tread lightly with this beast. =)

SceneMakingCall.lua
...

local API = require("api")

-- Callback for example api call
local function getNotificationsCallback(response)
   if (response == nil or response.status == nil) then
      -- Error
   elseif (response.status == "true") then
   		-- Success!!
   		-- Handle data if necessary like update scene (populate/update listview), or database
   		-- Data should be of the form of having an array notifications each element having the below:
   		-- notificationId = notification ID
	    -- type = category of notification (banking, shipment, quote, etc.)
	    -- body = notification message
	    -- phoneType = 0 for ios 1 for android
	    -- read = 0 for not read 1 for read
   end
end


-- Make an API call
api.getNotificationsByUser({sid=SceneManager.getUserSID(),callback=getNotificationsCallback})
      

...

Adding an API call:

(type GET)
function markNotifcationAsRead(params)
	-- Sets the callback if needed (Always present, since it resets any previous ones if nil)
	setCallback(params.callback)
	-- unremark for testing (_G.beta must be true in main.lua, but keep in mind that file also has mechanisms in place to override the first scene)
	--isTesting = "markNotifcationAsRead"

	-- Make the call, and just keep appending any additional parameters if needed
	sendNetworkRequest("markNotifcationAsRead?sid="..params.sid.."&notificationId="..params.notificationId)
end

(type POST)
Similar to GET, but there is one key difference

function sendPod(params)
	setCallback(params.callback)
	--isTesting = "sendPod"
	attachImage = true

	-- Make the call.
	-- This one is different from the GET, since the call is separate from the paramter string
	sendNetworkRequest("sid="..params.sid.."&id="..params.loadIdGuid,"sendPod")
end

NOTE: For the testing to work each call must have some data to send back. Usually, this contains actual data that was either given from GBT in response to an API service request, or live data grabbed from the server. Also, some have both examples, so just remark/unremark as needed to test both scenarios.

Below is what was added to api.lua recently for the markNotificationAsRead API call:

elseif (isTesting == "markNotifcationAsRead") then
	-- Error
	response = '{"status":"false","error_msg":{"errorMessage":"INSUFFICIENT_PARAMETERS","error":""}}'
	-- Success
	response = '{"status":"true","error_msg":{"errorMessage":"","error":""}}'
